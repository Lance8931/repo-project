<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.bean.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, password, age
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" /> 
    from user_t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_t
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ssm.bean.User" >
    insert into user_t (id, user_name, password, 
      age)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.bean.User" >
    insert into user_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="age != null" >
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.bean.User" >
    update user_t
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.bean.User" >
    update user_t
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getCountByProvince" parameterType="java.lang.String" resultType="java.lang.Integer">
  	select count(*) from hat_province where province = #{_parameter}
  </select>
  <select id="getCountByCity" parameterType="java.lang.String" resultType="java.lang.Integer">
  	select count(*) from hat_city where city = #{_parameter}
  </select>
  <select id="getCountByArea" parameterType="java.lang.String" resultType="java.lang.Integer">
  	select count(*) from hat_area where area = #{_parameter}
  </select>
  
  <update id="updateCity" parameterType="java.lang.String">
  	update hat_city set is_exist = true where city = #{_parameter}
  </update>
  
  <update id="updateArea" parameterType="java.lang.String">
  	update hat_area set is_exist = true where area = #{_parameter}
  </update>
  
  <select id="getProvinceListByCity" parameterType="java.lang.String" resultType="com.ssm.bean.User">
  	select province as username,provinceID as password from hat_city a left join hat_province b on a.father = b.provinceID where a.city = #{_parameter}
  </select>
  <select id="getCityListByArea" parameterType="java.lang.String" resultType="com.ssm.bean.User">
  	select city as username,cityID as password from hat_area a left join hat_city b on a.father = b.cityID where a.area = #{_parameter}
  </select>
  
  <insert id="insertArea" parameterType="java.util.Map">
  	insert into hat_area (areaID,area,father,is_exist) values (#{areaID},#{area},#{father},true)
  </insert>
  
  <insert id="insertCity" parameterType="java.util.Map">
  	insert into hat_city (cityID,city,father,is_exist) values (#{cityID},#{city},#{father},true)
  </insert>
  
  <update id="updateCityIsExist" parameterType="java.util.Map">
  	update hat_city set is_exist = true where city=#{city} and father = #{father}
  </update>
  
  <update id="updateAreaIsExist" parameterType="java.util.Map">
  	update hat_area set is_exist = true where area=#{area} and father = #{father}
  </update>
  
  <insert id="insertProvince1" parameterType="java.util.Map">
  	insert siping_province (province_id,province) values (#{provinceId},#{province})
  </insert>
  
  <insert id="insertCity1" parameterType="java.util.Map">
  	insert siping_city (city_id,city,parent_id) values (#{cityId},#{city},#{parentId})
  </insert>
  
  <insert id="insertArea1" parameterType="java.util.Map">
  	insert siping_area (area_id,area,parent_id) values (#{areaId},#{area},#{parentId})
  </insert>
  
  
</mapper>