<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.phoneerp.dao.PurchaseMapper" >
  <resultMap id="BaseResultMap" type="com.phoneerp.bean.Purchase" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pur_no" property="purNo" jdbcType="VARCHAR" />
    <result column="pur_time" property="purTime" jdbcType="DATE" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="phone_id" property="phoneId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pur_no, pur_time, shop_id, supplier_id, remark, create_time, phone_id, price
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from purchase
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from purchase
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.phoneerp.bean.Purchase" >
    insert into purchase (id, pur_no, pur_time, 
      shop_id, supplier_id, remark, 
      create_time, phone_id, price
      )
    values (#{id,jdbcType=INTEGER}, #{purNo,jdbcType=VARCHAR}, #{purTime,jdbcType=DATE}, 
      #{shopId,jdbcType=INTEGER}, #{supplierId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{phoneId,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.phoneerp.bean.Purchase" >
    insert into purchase
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="purNo != null" >
        pur_no,
      </if>
      <if test="purTime != null" >
        pur_time,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="phoneId != null" >
        phone_id,
      </if>
      <if test="price != null" >
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="purNo != null" >
        #{purNo,jdbcType=VARCHAR},
      </if>
      <if test="purTime != null" >
        #{purTime,jdbcType=DATE},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phoneId != null" >
        #{phoneId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.phoneerp.bean.Purchase" >
    update purchase
    <set >
      <if test="purNo != null" >
        pur_no = #{purNo,jdbcType=VARCHAR},
      </if>
      <if test="purTime != null" >
        pur_time = #{purTime,jdbcType=DATE},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phoneId != null" >
        phone_id = #{phoneId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.phoneerp.bean.Purchase" >
    update purchase
    set pur_no = #{purNo,jdbcType=VARCHAR},
      pur_time = #{purTime,jdbcType=DATE},
      shop_id = #{shopId,jdbcType=INTEGER},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      phone_id = #{phoneId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <resultMap type="com.phoneerp.bean.Purchase" id="ListResultMap" extends="BaseResultMap">
  	<result column="supplier_name" property="supplier.supplierName" jdbcType="VARCHAR" />
  	<result column="shop_name" property="shop.shopName" jdbcType="VARCHAR" />
  </resultMap>
  <select id="getList" parameterType="java.util.Map" resultMap="BaseResultMap">
  	SELECT
		t.*,
		a.supplier_name,
		b.shop_name
	FROM
		purchase t
	LEFT JOIN supplier a ON t.supplier_id = a.id
	LEFT JOIN shop b ON t.shop_id = b.id
  	<include refid="conditions"/>
  </select>
  
  <sql id="conditions" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="pur.purNo != null" >
        and  t.pur_no like CONCAT('%',#{pur.purNo},'%')
      </if>
      <if test="pur.supplier != null and pur.supplier.supplierName != null" >
        and  a.supplier_name like CONCAT('%',#{pur.supplier.supplierName},'%')
      </if>
      <if test="pur.shop != null and pur.shop.shopName != null" >
        and  b.shop_name like CONCAT('%',#{pur.shop.shopName},'%')
      </if>
      <if test="pur.startTime != null" >
        and  t.pur_time &gt;= #{pur.startTime}
      </if>
      <if test="pur.endTime != null" >
        and  t.pur_time &lt;= #{pur.endTime}
      </if>
      <if test="imeiNo != null">
      	and  t.id in (
      		select distinct(pur_id) from purchase_detail k where k.imeiNo like CONCAT('%',#{imeiNo},'%')
      	)
      </if>
    </trim>
  </sql>
</mapper>